apply plugin: 'com.android.application'
apply plugin: 'realm-android'

def APK_NAME = "TEMP-MVP"
def versionMajor = 0
def versionMinor = 0
def versionPatch = 1

def VERSION_CODE = commitCount()
def VERSION_NAME = "${versionMajor}.${versionMinor}.${versionPatch}" //.${versionBuild}"

android {

    buildToolsVersion rootProject.ext.androidBuildToolsVersion
    compileSdkVersion rootProject.ext.androidCompileSdkVersion

    defaultConfig {
        applicationId "com.way.mat.templatemvp"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode VERSION_CODE
        versionName VERSION_NAME
        signingConfig signingConfigs.debug
        multiDexEnabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {

        debug {
            try {
                storeFile file("keystore/debug.keystore")
                storePassword DEBUG_KEYSTORE_PASSWORD
                keyAlias "androiddebugkey"
                keyPassword DEBUG_KEY_PASSWORD
            } catch (ex) {
                throw new InvalidUserDataException("You should define DEBUG_KEYSTORE_PASSWORD and DEBUG_KEY_PASSWORD in gradle.properties.")
            }
        }

        release {
            try {
                storeFile file("keystore/debug.keystore")
                storePassword RELEASE_KEYSTORE_PASSWORD
                keyAlias "androiddebugkey"
                keyPassword RELEASE_KEY_PASSWORD
            } catch (ex) {
                throw new InvalidUserDataException("You should define RELEASE_KEYSTORE_PASSWORD and RELEASE_KEY_PASSWORD in gradle.properties.")
            }
        }

    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            debuggable true
            minifyEnabled false
            shrinkResources false
            archivesBaseName = APK_NAME + "-" + VERSION_NAME
            buildConfigField("String", "BASE_URL", "\"https://www.google.com.ua/\"")
        }
        release {
            signingConfig signingConfigs.release
            debuggable true
            minifyEnabled false
            shrinkResources false
            archivesBaseName = APK_NAME + "-" + VERSION_NAME
            proguardFiles 'proguard-rules.pro'
            buildConfigField("String", "BASE_URL", "\"https://www.google.com.ua/\"")
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.android.support:appcompat-v7:$rootProject.androidSupportSdkVersion"
    implementation "com.android.support:design:$rootProject.androidSupportSdkVersion"
    implementation "com.android.support:recyclerview-v7:$rootProject.androidSupportSdkVersion"
    implementation "com.android.support:cardview-v7:$rootProject.androidSupportSdkVersion"
    implementation "com.android.support.constraint:constraint-layout:$rootProject.constraintLayoutVersion"
    compile "com.android.support:support-vector-drawable:$rootProject.androidSupportSdkVersion"
    compile "com.android.support:animated-vector-drawable:$rootProject.androidSupportSdkVersion"

    // butter knife
    implementation "com.jakewharton:butterknife:$rootProject.butterknifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.butterknifeVersion"

    // image loader
    implementation ("com.github.bumptech.glide:glide:$rootProject.glideVersion") {
        exclude group: "com.android.support"
    }

    // rx java
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxjavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxandroidVersion"

    // preferences
    implementation "com.pixplicity.easyprefs:library:$rootProject.prefsVersion"

    // decoration
    implementation "uk.co.chrisjenx:calligraphy:$rootProject.calligraphyVersion"

    //event bus
    implementation "org.greenrobot:eventbus:$rootProject.eventBusVersion"

    //fast network
    implementation "com.amitshekhar.android:rx2-android-networking:$rootProject.rx2FastAndroidNetworking"
    implementation "com.google.code.gson:gson:$rootProject.gsonVersion"

    // logger
    implementation "com.jakewharton.timber:timber:$rootProject.timberVersion"

    // dependency injection
    implementation "com.google.dagger:dagger:$rootProject.dagger2Version"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.dagger2Version"
}

def commitCount() {
    def stdout = new ByteArrayOutputStream()
    description = "git rev-list --full-history --all"
    println(description)
    exec {
        commandLine 'git', 'rev-list', '--full-history', '--all'
        standardOutput = stdout
    }
    String output = stdout.toString()
    List<String> commits = output.split("\n")
    println("Version Code: " + commits.size())
    return commits.size()
}
